//Error de asignación
UPDATE SYSTEM.AC_PERSONAS SET PER_CODDEP = NULL WHERE PER_CODIGO=34;
SELECT * FROM SYSTEM.AC_PERSONAS WHERE PER_CODDEP IS NULL;

//Error de relación ausente
UPDATE AC_TRAMITES_SERVICIOS SET TRS_DEPCOD = NULL WHERE TRS_CODIGO = 101;
SELECT * FROM SYSTEM.AC_TRAMITES_SERVICIOS WHERE TRS_DEPCOD IS NULL;

//Error de consistencia temporal
UPDATE AC_FASE_INICIO
SET FINI_FECHA_INI = TO_DATE('2025-06-01', 'YYYY-MM-DD'),
    FINI_FECHA_FIN = TO_DATE('2025-05-01', 'YYYY-MM-DD')
WHERE FINI_CODIGO = 20;

SELECT FINI_CODIGO, FINI_FECHA_INI, FINI_FECHA_FIN
FROM AC_FASE_INICIO
WHERE FINI_FECHA_FIN < FINI_FECHA_INI;

//Error de datos faltantes
//Convocatoria para plazas de administrativo en la Conselleria
UPDATE AC_EMPLEO_PUBLICO
SET EPU_DESCRIPCION = NULL
WHERE EPU_CODIGO = 51;

SELECT EPU_CODIGO, EPU_DESCRIPCION
FROM AC_EMPLEO_PUBLICO
WHERE EPU_DESCRIPCION IS NULL;

//Error de tipo o formato
//46480
UPDATE AC_REGISTROS
SET REG_CP = 'ABCDE'
WHERE REG_CODIGO = 206;
SELECT REG_CODIGO, REG_CP
FROM AC_REGISTROS
WHERE REG_CP IS NOT NULL AND REGEXP_LIKE(REG_CP, '[^0-9]');

//663192927
UPDATE AC_REGISTROS
SET REG_TELEFON_EXT = 'ABC123'
WHERE REG_CODIGO = 301;

SELECT REG_CODIGO, REG_TELEFON_EXT
FROM AC_REGISTROS
WHERE REG_TELEFON_EXT IS NOT NULL
  AND REGEXP_LIKE(REG_TELEFON_EXT, '[^0-9]');

//Error de duplicidad
-- Registro original
INSERT INTO AC_PERSONAS (PER_CODIGO, PER_IDENTIFICACION, PER_NOMBRE, PER_APELLIDO1)
VALUES (201, '12345678A', 'María', 'Gómez');

-- Registro duplicado
INSERT INTO AC_PERSONAS (PER_CODIGO, PER_IDENTIFICACION, PER_NOMBRE, PER_APELLIDO1)
VALUES (202, '12345678A', 'M. Gómez', 'G.');

SELECT PER_IDENTIFICACION, COUNT(*)
FROM AC_PERSONAS
GROUP BY PER_IDENTIFICACION
HAVING COUNT(*) > 1;

SELECT *
FROM AC_PERSONAS
WHERE PER_IDENTIFICACION IN (
  SELECT PER_IDENTIFICACION
  FROM AC_PERSONAS
  GROUP BY PER_IDENTIFICACION
  HAVING COUNT(*) > 1
);




